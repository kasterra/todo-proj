{
    "swagger": "2.0",
    "info": {
        "title": "Todo Swagger",
        "contact": {},
        "version": "1.0"
    },
    "host": "{host}:8080",
    "basePath": "/",
    "paths": {
        "/user/SignIn": {
            "post": {
                "description": "Get JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "User's email",
                        "name": "Email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "User's password",
                        "name": "Password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Only Jwt",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDto"
                        }
                    },
                    "400": {
                        "description": "when user binding fail -\u003e body data was not vaild",
                        "schema": {
                            "$ref": "#/definitions/response.apiErrorResponse"
                        }
                    },
                    "500": {
                        "description": "when user sign in error -\u003e wrong data",
                        "schema": {
                            "$ref": "#/definitions/response.apiErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/SignUp": {
            "post": {
                "description": "Save user's info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "User's name",
                        "name": "Name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "User's email",
                        "name": "Email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "User password",
                        "name": "Password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "password, token are empty",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDto"
                        }
                    },
                    "400": {
                        "description": "when user binding fail -\u003e body data was not vaild",
                        "schema": {
                            "$ref": "#/definitions/response.apiErrorResponse"
                        }
                    },
                    "500": {
                        "description": "when user save fail-\u003e user is already exists",
                        "schema": {
                            "$ref": "#/definitions/response.apiErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/Token": {
            "get": {
                "description": "Get User info using token",
                "produces": [
                    "application/json"
                ],
                "summary": "Check Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's info",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDto"
                        }
                    },
                    "401": {
                        "description": "when token was not vaild",
                        "schema": {
                            "$ref": "#/definitions/response.apiErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.UserDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "response.apiErrorResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}